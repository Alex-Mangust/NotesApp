package Controllers.Interfaces;

import java.util.List;

/** Интерфейс, объявляющий работу пользовательского интерфейса */
public interface iView {
    String prompt(String msg); // Объявленный метод, необходимый для получения данных от пользователя
    String inputMessage(); // Объявленный метод, необходимый для получения сообщения для пользователя, в котором предлагается ввести команду
    void listCommand(); // Объявленный метод, необходимый для вывода в консоль списка всех команд для работы с программой
    void nullNotes(); // Объявленный метод, необходимый для вывода в консоль сообщения, если в файле нет ни одной заметки
    List<String> createNote(); // Объявленный метод, необходимый для работы интерфейса создания заметки
    String createNoteMessangee(String date); // Объявленный метод, необходимый для получения сообщения для пользователя о успешном создании заметки
    String input(); // Объявленный метод, необходимый для получения сообщения для пользователя, в котором предлагается ввести поисковой запрос
    int criteriaFind(); // Объявленный метод, необходимый для работы интерфейса выбора критерия поиска */
    void findResult(); // Объявленный метод, необходимый для вывода в консоль сообщения, перед тем как выдать результаты поиска
    void nullFindResult(); // Объявленный метод, необходимый для выввода в консоль сообщения, если поиск не дал результатов
    void errorCriteriaFind(); // Объявленный метод, необходимый для вывода в консоль сообщения, если пользователь ввел неверный критерий
    int criteriaEdit(); // Объявленный метод, необходимый для работы интерфейса редактирования заметки
    int editIndex(); // Объявленный метод, необходимый для получения от пользователя индекса заметки, в которую он хочет внести изменения
    void successfulEdit(); // Объявленный метод, необходимый для вывода в консоль сообщения о том, что редактирование заметки прошло успешно
    void printNotesTitle(); // Объявленный метод, необходимый для вывода в консоль сообщения, перед тем как выдать список всех заметок
    int deleteIndex(); // Объявленный метод, необходимый для получения от пользователя индекса заметки, которую он хочет удалить */
    void errorIndex(); // Объявленный метод, необходимый для вывода в консоль сообщения, если пользователь ввел неверный индекс
    String deleteChoice(); // Объявленный метод, необходимый для работы интерфейса удаления заметки
    String deleteChoiceToDescription(); // Объявленный метод, необходимый для работы интерфейса удаления заметки
    void successfulDelete(); // Объявленный метод, необходимый для вывода в консоль сообщения о том, что удаление заметки прошло успешно
    void unsuccessfulDelete(); // Объявленный метод, необходимый для вывода в консоль сообщения о том, что удаление заметки не удалось
    void noCommand(); // Объявленный метод, необходимый для вывода в консоль сообщения о том, что введенной пользователем команды нет в списке команд
    void exitMessage(); // Объявленный метод, необходимый для вывода в консоль сообщения о том, что работа программы завершена
}
